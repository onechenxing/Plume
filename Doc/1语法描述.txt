------注释
单行使用//
很多行使用/*...*/

------定义
变量不用定义直接使用，变量只是标签可以关联和赋值任何类型(可参考Python)

------作用域
全局作用域:
内部函数和绑定的外部代码都在全局作用域。为所有代码文件共享。

局部作用域:
只有代码块有局部作用域，并且代码块可以嵌套。
每个加载的代码文件都封装成一个代码块，区别是加载的代码文件和被加载的代码不再有嵌套关系。

变量查找规则：
查找变量会从当前代码块逐级向上直到代码文件为止。
如果还没查找到，则会查找全局作用域。

------关键字(保留字)
for in if elif else and or new 
return wait load print printc printu

------数据类型
数值: number
字符串: string
数组/字典:[]
代码块(可实现类和函数): {} or :xx{}

------测试数据类型
n = 3.14
s = 'hello world'
arr = [1,2,3]
print:arr[0]
dic = [a='aaa',b='bbb',c='ccc']
print:dic['a']
print:dic.a

------运算符
赋值:
=

算术:
+
-
*
/

判断:
==
!=
>
<
>=
<=

逻辑:
and
or

------控制结构

//选择:
if n > 5 {

}
elif n < 5 {

}
else {

}


//循环:
for i in arr {
	
}

for i in range:10{

}


------代码块
	代码块查找一个定义时会先查找自己范围内，然后查找嵌入他的上层代码元素，没有找到再往上遍历查找
	代码块的参数为可选内容。代码块可以实现函数和结构体。


//普通代码块
Block = {
	name = 'cx'
	print:name
}

//带参数的代码块(实现了函数)
BlockFun = :name,sex{
	print:name,sex
}

//嵌套代码块(实现了类)
BlockClass = {
	name = 'cx'
	SayHello = :{
		print:'hello '+name
	}
}

//代码块测试调用
Block:
BlockFun:'cx','male'
bc = new BlockClass  (暂未实现 todo)
bc.SayHello:


